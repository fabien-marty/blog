name: ci

on:
  push:
    branches:
      - main
  pull_request:

env:
  POETRY_HOME: /opt/poetry
  POETRY_CACHE: /opt/poetry_cache
  POETRY_VERSION: 1.7.1
  PYTHON_VERSION: 3.12
  SITE_URL: https://blog.fabien-marty.dev

jobs:

  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Cache deps install
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.POETRY_HOME }}
            ${{ env.POETRY_CACHE }}
          key: cachepoetry-${{ hashFiles('poetry.lock', '.github/workflows/**') }}-${{ matrix.python-version }}
      - name: Install poetry
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |
          python3 -m venv $POETRY_HOME
          $POETRY_HOME/bin/pip install poetry==$POETRY_VERSION
      - name: Fix github path
        run: |
          echo "$POETRY_HOME/bin" >> "$GITHUB_PATH"
      - name: Configure poetry
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project false
          poetry config cache-dir $POETRY_CACHE
          poetry config virtualenvs.path $POETRY_CACHE/venv
      - name: Install requirements
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |
          poetry install
      - name: Run build
        run: |
          poetry run make build
      - name: Check modified files
        run: |
          git diff --exit-code
      - name: Install rclone
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: |
          sudo apt-get update
          sudo apt-get install rclone
      - name: Sync with rclone
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        env:
          RCLONE_CONFIG_MYS3_TYPE: s3
          RCLONE_CONFIG_MYS3_PROVIDER: ${{ secrets.AWS_S3_PROVIDER }}
          RCLONE_CONFIG_MYS3_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          RCLONE_CONFIG_MYS3_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          RCLONE_CONFIG_MYS3_ENDPOINT: ${{ secrets.AWS_S3_ENDPOINT }}
          RCLONE_CONFIG_MYS3_REGION: ${{ secrets.AWS_REGION }}
          RCLONE_CONFIG_MYS3_ACL: public-read
          BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        run: |
          rclone --version
          rclone sync site mys3:${{ env.BUCKET }} --checksum --fast-list --verbose
